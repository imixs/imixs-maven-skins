/*
! tailwindcss v3.1.4 | MIT License | https://tailwindcss.com
*/

header {
	position: fixed;
	width: 100%;
	background-color: #428BCA !important;
}

header nav {
	padding: 10px;
	max-width: 1280px;
	margin-left: auto;
	margin-right: auto;

	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: center;
}

header nav .nav-title {
	align-items: center;display:flex;
}
header nav  .nav-menu{
	align-items: center;display:flex;
}
header nav #menu {	
	flex-direction: row;
}

header nav #menu li {	
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	max-width: 1280px;
	margin-left: auto;
	margin-right: auto;
	padding: 0 20px;
}
#menu-button svg {
	width: 1.5rem;
	height: 1.5rem;
}


@media (min-width: 1024px) {
  nav button {
    display: none;
  }
  #menu {
    display: flex;
  }	
  
 
}



section {
	max-width: 1280px;
	margin-left: auto;
	margin-right: auto;
	margin-bottom: 60px;
	padding: 0 20px;

	display: grid;
	grid-template-columns: repeat(12, minmax(64px, 110px));
	column-gap: 40px;
}

section h1.lead {
	font-size: 3.75rem;
	line-height: 1;
	font-weight: 800;
	margin: 0 0 40px 0;
}

section p {
	color: #777;
}
section p.lead {
	font-size: 1.25rem;
	line-height: 1.75rem;
	color: #777;
}
section h2.lead {
	
	font-weight: 800;
}

section li {
	margin: 0 10px 10px 0 ;
	display: flex;
}
section li svg {
margin-right: 10px;
height: 1.25rem;
color: #FCB802;
}

footer h3 {
	font-size: 0.875rem;
	text-transform: uppercase;
    font-weight: 600;
}

@media (max-width: 768px) {
	section {
		grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
	}
}



.terminal {
	background-color: #000;
	color: #fff;
	min-height: 400px;
	padding: 20px;
	border-radius: 10px;
	border: 3px solid #F3BF36;
}



html {
  line-height: 1.5;
  font-family: 'Open Sans', sayns-serif;
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

footer {
	max-width: 1280px;
	margin-left: auto;
	margin-right: auto;
	
}
hr {
	border-color: #808080 #808080 #ddd;
	border-style: none none solid;
	border-width: 0 0 1px;
	clear: both;
	margin: 10px auto;
	margin-bottom:30px;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}


/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}



/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}



legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}


/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}


/* SVG Styles */

.-translate-x-full {
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-full {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}



.opacity-0 {
  opacity: 0;
}

.opacity-100 {
  opacity: 1;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline {
  outline-style: solid;
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition {
  transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
